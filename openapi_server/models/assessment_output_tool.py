# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.assessment_output_tool_ci import AssessmentOutputToolCI
from openapi_server import util


class AssessmentOutputTool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, validator: str=None, ci: AssessmentOutputToolCI=None, data_unstructured: object=None):
        """AssessmentOutputTool - a model defined in OpenAPI

        :param name: The name of this AssessmentOutputTool.
        :param validator: The validator of this AssessmentOutputTool.
        :param ci: The ci of this AssessmentOutputTool.
        :param data_unstructured: The data_unstructured of this AssessmentOutputTool.
        """
        self.openapi_types = {
            'name': str,
            'validator': str,
            'ci': AssessmentOutputToolCI,
            'data_unstructured': object
        }

        self.attribute_map = {
            'name': 'name',
            'validator': 'validator',
            'ci': 'ci',
            'data_unstructured': 'data_unstructured'
        }

        self._name = name
        self._validator = validator
        self._ci = ci
        self._data_unstructured = data_unstructured

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentOutputTool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentOutputTool of this AssessmentOutputTool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AssessmentOutputTool.


        :return: The name of this AssessmentOutputTool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AssessmentOutputTool.


        :param name: The name of this AssessmentOutputTool.
        :type name: str
        """

        self._name = name

    @property
    def validator(self):
        """Gets the validator of this AssessmentOutputTool.


        :return: The validator of this AssessmentOutputTool.
        :rtype: str
        """
        return self._validator

    @validator.setter
    def validator(self, validator):
        """Sets the validator of this AssessmentOutputTool.


        :param validator: The validator of this AssessmentOutputTool.
        :type validator: str
        """

        self._validator = validator

    @property
    def ci(self):
        """Gets the ci of this AssessmentOutputTool.


        :return: The ci of this AssessmentOutputTool.
        :rtype: AssessmentOutputToolCI
        """
        return self._ci

    @ci.setter
    def ci(self, ci):
        """Sets the ci of this AssessmentOutputTool.


        :param ci: The ci of this AssessmentOutputTool.
        :type ci: AssessmentOutputToolCI
        """

        self._ci = ci

    @property
    def data_unstructured(self):
        """Gets the data_unstructured of this AssessmentOutputTool.


        :return: The data_unstructured of this AssessmentOutputTool.
        :rtype: object
        """
        return self._data_unstructured

    @data_unstructured.setter
    def data_unstructured(self, data_unstructured):
        """Sets the data_unstructured of this AssessmentOutputTool.


        :param data_unstructured: The data_unstructured of this AssessmentOutputTool.
        :type data_unstructured: object
        """

        self._data_unstructured = data_unstructured
