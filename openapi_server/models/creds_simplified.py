# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CredsSimplified(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: str=None, keystore_var: str=None, alias_var: str=None, password_var: str=None, variable: str=None, keyfile_var: str=None, passphrase_var: str=None, username_var: str=None):
        """CredsSimplified - a model defined in OpenAPI

        :param id: The id of this CredsSimplified.
        :param type: The type of this CredsSimplified.
        :param keystore_var: The keystore_var of this CredsSimplified.
        :param alias_var: The alias_var of this CredsSimplified.
        :param password_var: The password_var of this CredsSimplified.
        :param variable: The variable of this CredsSimplified.
        :param keyfile_var: The keyfile_var of this CredsSimplified.
        :param passphrase_var: The passphrase_var of this CredsSimplified.
        :param username_var: The username_var of this CredsSimplified.
        """
        self.openapi_types = {
            'id': str,
            'type': str,
            'keystore_var': str,
            'alias_var': str,
            'password_var': str,
            'variable': str,
            'keyfile_var': str,
            'passphrase_var': str,
            'username_var': str
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'keystore_var': 'keystore_var',
            'alias_var': 'alias_var',
            'password_var': 'password_var',
            'variable': 'variable',
            'keyfile_var': 'keyfile_var',
            'passphrase_var': 'passphrase_var',
            'username_var': 'username_var'
        }

        self._id = id
        self._type = type
        self._keystore_var = keystore_var
        self._alias_var = alias_var
        self._password_var = password_var
        self._variable = variable
        self._keyfile_var = keyfile_var
        self._passphrase_var = passphrase_var
        self._username_var = username_var

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CredsSimplified':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Creds_simplified of this CredsSimplified.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CredsSimplified.


        :return: The id of this CredsSimplified.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CredsSimplified.


        :param id: The id of this CredsSimplified.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def type(self):
        """Gets the type of this CredsSimplified.


        :return: The type of this CredsSimplified.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CredsSimplified.


        :param type: The type of this CredsSimplified.
        :type type: str
        """
        allowed_values = ["file", "zip", "username_password", "ssh_user_private_key"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def keystore_var(self):
        """Gets the keystore_var of this CredsSimplified.


        :return: The keystore_var of this CredsSimplified.
        :rtype: str
        """
        return self._keystore_var

    @keystore_var.setter
    def keystore_var(self, keystore_var):
        """Sets the keystore_var of this CredsSimplified.


        :param keystore_var: The keystore_var of this CredsSimplified.
        :type keystore_var: str
        """

        self._keystore_var = keystore_var

    @property
    def alias_var(self):
        """Gets the alias_var of this CredsSimplified.


        :return: The alias_var of this CredsSimplified.
        :rtype: str
        """
        return self._alias_var

    @alias_var.setter
    def alias_var(self, alias_var):
        """Sets the alias_var of this CredsSimplified.


        :param alias_var: The alias_var of this CredsSimplified.
        :type alias_var: str
        """

        self._alias_var = alias_var

    @property
    def password_var(self):
        """Gets the password_var of this CredsSimplified.


        :return: The password_var of this CredsSimplified.
        :rtype: str
        """
        return self._password_var

    @password_var.setter
    def password_var(self, password_var):
        """Sets the password_var of this CredsSimplified.


        :param password_var: The password_var of this CredsSimplified.
        :type password_var: str
        """

        self._password_var = password_var

    @property
    def variable(self):
        """Gets the variable of this CredsSimplified.


        :return: The variable of this CredsSimplified.
        :rtype: str
        """
        return self._variable

    @variable.setter
    def variable(self, variable):
        """Sets the variable of this CredsSimplified.


        :param variable: The variable of this CredsSimplified.
        :type variable: str
        """

        self._variable = variable

    @property
    def keyfile_var(self):
        """Gets the keyfile_var of this CredsSimplified.


        :return: The keyfile_var of this CredsSimplified.
        :rtype: str
        """
        return self._keyfile_var

    @keyfile_var.setter
    def keyfile_var(self, keyfile_var):
        """Sets the keyfile_var of this CredsSimplified.


        :param keyfile_var: The keyfile_var of this CredsSimplified.
        :type keyfile_var: str
        """

        self._keyfile_var = keyfile_var

    @property
    def passphrase_var(self):
        """Gets the passphrase_var of this CredsSimplified.


        :return: The passphrase_var of this CredsSimplified.
        :rtype: str
        """
        return self._passphrase_var

    @passphrase_var.setter
    def passphrase_var(self, passphrase_var):
        """Sets the passphrase_var of this CredsSimplified.


        :param passphrase_var: The passphrase_var of this CredsSimplified.
        :type passphrase_var: str
        """

        self._passphrase_var = passphrase_var

    @property
    def username_var(self):
        """Gets the username_var of this CredsSimplified.


        :return: The username_var of this CredsSimplified.
        :rtype: str
        """
        return self._username_var

    @username_var.setter
    def username_var(self, username_var):
        """Sets the username_var of this CredsSimplified.


        :param username_var: The username_var of this CredsSimplified.
        :type username_var: str
        """

        self._username_var = username_var
