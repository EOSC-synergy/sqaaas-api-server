# SPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>
#
# SPDX-License-Identifier: GPL-3.0-only

# coding: utf-8

from datetime import date, datetime
from typing import Dict, List, Type

from openapi_server import util
from openapi_server.models.base_model_ import Model
from openapi_server.models.repository_credentials_id import \
    RepositoryCredentialsId


class Repository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(
        self,
        repo: str = None,
        branch: str = None,
        credentials_id: RepositoryCredentialsId = None,
    ):
        """Repository - a model defined in OpenAPI

        :param repo: The repo of this Repository.
        :param branch: The branch of this Repository.
        :param credentials_id: The credentials_id of this Repository.
        """
        self.openapi_types = {
            "repo": str,
            "branch": str,
            "credentials_id": RepositoryCredentialsId,
        }

        self.attribute_map = {
            "repo": "repo",
            "branch": "branch",
            "credentials_id": "credentials_id",
        }

        self._repo = repo
        self._branch = branch
        self._credentials_id = credentials_id

    @classmethod
    def from_dict(cls, dikt: dict) -> "Repository":
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Repository of this Repository.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repo(self):
        """Gets the repo of this Repository.

        URL of the repository

        :return: The repo of this Repository.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this Repository.

        URL of the repository

        :param repo: The repo of this Repository.
        :type repo: str
        """

        self._repo = repo

    @property
    def branch(self):
        """Gets the branch of this Repository.

        Branch name

        :return: The branch of this Repository.
        :rtype: str
        """
        return self._branch

    @branch.setter
    def branch(self, branch):
        """Sets the branch of this Repository.

        Branch name

        :param branch: The branch of this Repository.
        :type branch: str
        """

        self._branch = branch

    @property
    def credentials_id(self):
        """Gets the credentials_id of this Repository.


        :return: The credentials_id of this Repository.
        :rtype: RepositoryCredentialsId
        """
        return self._credentials_id

    @credentials_id.setter
    def credentials_id(self, credentials_id):
        """Sets the credentials_id of this Repository.


        :param credentials_id: The credentials_id of this Repository.
        :type credentials_id: RepositoryCredentialsId
        """

        self._credentials_id = credentials_id
