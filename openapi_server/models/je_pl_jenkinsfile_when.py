# SPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>
#
# SPDX-License-Identifier: GPL-3.0-only

# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class JePLJenkinsfileWhen(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branches: List[str]=None):
        """JePLJenkinsfileWhen - a model defined in OpenAPI

        :param branches: The branches of this JePLJenkinsfileWhen.
        """
        self.openapi_types = {
            'branches': List[str]
        }

        self.attribute_map = {
            'branches': 'branches'
        }

        self._branches = branches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JePLJenkinsfileWhen':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JePL_jenkinsfile_when of this JePLJenkinsfileWhen.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branches(self):
        """Gets the branches of this JePLJenkinsfileWhen.


        :return: The branches of this JePLJenkinsfileWhen.
        :rtype: List[str]
        """
        return self._branches

    @branches.setter
    def branches(self, branches):
        """Sets the branches of this JePLJenkinsfileWhen.


        :param branches: The branches of this JePLJenkinsfileWhen.
        :type branches: List[str]
        """

        self._branches = branches
