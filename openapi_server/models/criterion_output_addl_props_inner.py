# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.criterion_output_addl_props_items_validation import CriterionOutputAddlPropsItemsValidation
from openapi_server import util


class CriterionOutputAddlPropsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, stdout_command: str=None, stdout_text: str=None, tool: str=None, validator: str=None, validation: CriterionOutputAddlPropsItemsValidation=None):
        """CriterionOutputAddlPropsInner - a model defined in OpenAPI

        :param status: The status of this CriterionOutputAddlPropsInner.
        :param stdout_command: The stdout_command of this CriterionOutputAddlPropsInner.
        :param stdout_text: The stdout_text of this CriterionOutputAddlPropsInner.
        :param tool: The tool of this CriterionOutputAddlPropsInner.
        :param validator: The validator of this CriterionOutputAddlPropsInner.
        :param validation: The validation of this CriterionOutputAddlPropsInner.
        """
        self.openapi_types = {
            'status': str,
            'stdout_command': str,
            'stdout_text': str,
            'tool': str,
            'validator': str,
            'validation': CriterionOutputAddlPropsItemsValidation
        }

        self.attribute_map = {
            'status': 'status',
            'stdout_command': 'stdout_command',
            'stdout_text': 'stdout_text',
            'tool': 'tool',
            'validator': 'validator',
            'validation': 'validation'
        }

        self._status = status
        self._stdout_command = stdout_command
        self._stdout_text = stdout_text
        self._tool = tool
        self._validator = validator
        self._validation = validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CriterionOutputAddlPropsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CriterionOutput_addl_props_inner of this CriterionOutputAddlPropsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this CriterionOutputAddlPropsInner.


        :return: The status of this CriterionOutputAddlPropsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CriterionOutputAddlPropsInner.


        :param status: The status of this CriterionOutputAddlPropsInner.
        :type status: str
        """
        allowed_values = ["SUCCESS", "FAILED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def stdout_command(self):
        """Gets the stdout_command of this CriterionOutputAddlPropsInner.


        :return: The stdout_command of this CriterionOutputAddlPropsInner.
        :rtype: str
        """
        return self._stdout_command

    @stdout_command.setter
    def stdout_command(self, stdout_command):
        """Sets the stdout_command of this CriterionOutputAddlPropsInner.


        :param stdout_command: The stdout_command of this CriterionOutputAddlPropsInner.
        :type stdout_command: str
        """

        self._stdout_command = stdout_command

    @property
    def stdout_text(self):
        """Gets the stdout_text of this CriterionOutputAddlPropsInner.


        :return: The stdout_text of this CriterionOutputAddlPropsInner.
        :rtype: str
        """
        return self._stdout_text

    @stdout_text.setter
    def stdout_text(self, stdout_text):
        """Sets the stdout_text of this CriterionOutputAddlPropsInner.


        :param stdout_text: The stdout_text of this CriterionOutputAddlPropsInner.
        :type stdout_text: str
        """

        self._stdout_text = stdout_text

    @property
    def tool(self):
        """Gets the tool of this CriterionOutputAddlPropsInner.


        :return: The tool of this CriterionOutputAddlPropsInner.
        :rtype: str
        """
        return self._tool

    @tool.setter
    def tool(self, tool):
        """Sets the tool of this CriterionOutputAddlPropsInner.


        :param tool: The tool of this CriterionOutputAddlPropsInner.
        :type tool: str
        """

        self._tool = tool

    @property
    def validator(self):
        """Gets the validator of this CriterionOutputAddlPropsInner.


        :return: The validator of this CriterionOutputAddlPropsInner.
        :rtype: str
        """
        return self._validator

    @validator.setter
    def validator(self, validator):
        """Sets the validator of this CriterionOutputAddlPropsInner.


        :param validator: The validator of this CriterionOutputAddlPropsInner.
        :type validator: str
        """

        self._validator = validator

    @property
    def validation(self):
        """Gets the validation of this CriterionOutputAddlPropsInner.


        :return: The validation of this CriterionOutputAddlPropsInner.
        :rtype: CriterionOutputAddlPropsItemsValidation
        """
        return self._validation

    @validation.setter
    def validation(self, validation):
        """Sets the validation of this CriterionOutputAddlPropsInner.


        :param validation: The validation of this CriterionOutputAddlPropsInner.
        :type validation: CriterionOutputAddlPropsItemsValidation
        """

        self._validation = validation
