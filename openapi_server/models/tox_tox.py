# SPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>
# SPDX-FileContributor: Pablo Orviz <orviz@ifca.unican.es>
#
# SPDX-License-Identifier: GPL-3.0-only

# coding: utf-8

from datetime import date, datetime
from typing import Dict, List, Type

from openapi_server import util
from openapi_server.models.base_model_ import Model


class ToxTox(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, testenv: List[str] = None, tox_file: str = "tox.ini"):
        """ToxTox - a model defined in OpenAPI

        :param testenv: The testenv of this ToxTox.
        :param tox_file: The tox_file of this ToxTox.
        """
        self.openapi_types = {"testenv": List[str], "tox_file": str}

        self.attribute_map = {"testenv": "testenv", "tox_file": "tox_file"}

        self._testenv = testenv
        self._tox_file = tox_file

    @classmethod
    def from_dict(cls, dikt: dict) -> "ToxTox":
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tox_tox of this ToxTox.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def testenv(self):
        """Gets the testenv of this ToxTox.


        :return: The testenv of this ToxTox.
        :rtype: List[str]
        """
        return self._testenv

    @testenv.setter
    def testenv(self, testenv):
        """Sets the testenv of this ToxTox.


        :param testenv: The testenv of this ToxTox.
        :type testenv: List[str]
        """
        if testenv is None:
            raise ValueError("Invalid value for `testenv`, must not be `None`")

        self._testenv = testenv

    @property
    def tox_file(self):
        """Gets the tox_file of this ToxTox.


        :return: The tox_file of this ToxTox.
        :rtype: str
        """
        return self._tox_file

    @tox_file.setter
    def tox_file(self, tox_file):
        """Sets the tox_file of this ToxTox.


        :param tox_file: The tox_file of this ToxTox.
        :type tox_file: str
        """

        self._tox_file = tox_file
