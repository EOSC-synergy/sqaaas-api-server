# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server.models.assessment_output_subcriteria import AssessmentOutputSubcriteria
from openapi_server import util


class AssessmentOutputReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, valid: bool=False, filtered_reason: List[str]=[], subcriteria: Dict[str, AssessmentOutputSubcriteria]=None):
        """AssessmentOutputReport - a model defined in OpenAPI

        :param valid: The valid of this AssessmentOutputReport.
        :param filtered_reason: The filtered_reason of this AssessmentOutputReport.
        :param subcriteria: The subcriteria of this AssessmentOutputReport.
        """
        self.openapi_types = {
            'valid': bool,
            'filtered_reason': List[str],
            'subcriteria': Dict[str, AssessmentOutputSubcriteria]
        }

        self.attribute_map = {
            'valid': 'valid',
            'filtered_reason': 'filtered_reason',
            'subcriteria': 'subcriteria'
        }

        self._valid = valid
        self._filtered_reason = filtered_reason
        self._subcriteria = subcriteria

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssessmentOutputReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssessmentOutput_report of this AssessmentOutputReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def valid(self):
        """Gets the valid of this AssessmentOutputReport.


        :return: The valid of this AssessmentOutputReport.
        :rtype: bool
        """
        return self._valid

    @valid.setter
    def valid(self, valid):
        """Sets the valid of this AssessmentOutputReport.


        :param valid: The valid of this AssessmentOutputReport.
        :type valid: bool
        """

        self._valid = valid

    @property
    def filtered_reason(self):
        """Gets the filtered_reason of this AssessmentOutputReport.

        Contains the reason why the criterion was filtered out

        :return: The filtered_reason of this AssessmentOutputReport.
        :rtype: List[str]
        """
        return self._filtered_reason

    @filtered_reason.setter
    def filtered_reason(self, filtered_reason):
        """Sets the filtered_reason of this AssessmentOutputReport.

        Contains the reason why the criterion was filtered out

        :param filtered_reason: The filtered_reason of this AssessmentOutputReport.
        :type filtered_reason: List[str]
        """

        self._filtered_reason = filtered_reason

    @property
    def subcriteria(self):
        """Gets the subcriteria of this AssessmentOutputReport.


        :return: The subcriteria of this AssessmentOutputReport.
        :rtype: Dict[str, AssessmentOutputSubcriteria]
        """
        return self._subcriteria

    @subcriteria.setter
    def subcriteria(self, subcriteria):
        """Sets the subcriteria of this AssessmentOutputReport.


        :param subcriteria: The subcriteria of this AssessmentOutputReport.
        :type subcriteria: Dict[str, AssessmentOutputSubcriteria]
        """

        self._subcriteria = subcriteria
