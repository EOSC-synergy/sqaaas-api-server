# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ServiceDockerComposeAddlPropsBuild(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: str=None, dockerfile: str=None, args: Dict[str, str]=None):
        """ServiceDockerComposeAddlPropsBuild - a model defined in OpenAPI

        :param context: The context of this ServiceDockerComposeAddlPropsBuild.
        :param dockerfile: The dockerfile of this ServiceDockerComposeAddlPropsBuild.
        :param args: The args of this ServiceDockerComposeAddlPropsBuild.
        """
        self.openapi_types = {
            'context': str,
            'dockerfile': str,
            'args': Dict[str, str]
        }

        self.attribute_map = {
            'context': 'context',
            'dockerfile': 'dockerfile',
            'args': 'args'
        }

        self._context = context
        self._dockerfile = dockerfile
        self._args = args

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceDockerComposeAddlPropsBuild':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceDockerCompose_addl_props_build of this ServiceDockerComposeAddlPropsBuild.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this ServiceDockerComposeAddlPropsBuild.


        :return: The context of this ServiceDockerComposeAddlPropsBuild.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this ServiceDockerComposeAddlPropsBuild.


        :param context: The context of this ServiceDockerComposeAddlPropsBuild.
        :type context: str
        """

        self._context = context

    @property
    def dockerfile(self):
        """Gets the dockerfile of this ServiceDockerComposeAddlPropsBuild.


        :return: The dockerfile of this ServiceDockerComposeAddlPropsBuild.
        :rtype: str
        """
        return self._dockerfile

    @dockerfile.setter
    def dockerfile(self, dockerfile):
        """Sets the dockerfile of this ServiceDockerComposeAddlPropsBuild.


        :param dockerfile: The dockerfile of this ServiceDockerComposeAddlPropsBuild.
        :type dockerfile: str
        """

        self._dockerfile = dockerfile

    @property
    def args(self):
        """Gets the args of this ServiceDockerComposeAddlPropsBuild.


        :return: The args of this ServiceDockerComposeAddlPropsBuild.
        :rtype: Dict[str, str]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this ServiceDockerComposeAddlPropsBuild.


        :param args: The args of this ServiceDockerComposeAddlPropsBuild.
        :type args: Dict[str, str]
        """

        self._args = args
