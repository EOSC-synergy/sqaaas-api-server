# SPDX-FileCopyrightText: Copyright contributors to the Software Quality Assurance as a Service (SQAaaS) project <sqaaas@ibergrid.eu>
# SPDX-FileContributor: Pablo Orviz <orviz@ifca.unican.es>
#
# SPDX-License-Identifier: GPL-3.0-only

# coding: utf-8

from datetime import date, datetime
from typing import Dict, List, Type

from openapi_server import util
from openapi_server.models.base_model_ import Model
from openapi_server.models.tool import Tool


class CriterionWorkflow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str = None, tools: List[Tool] = None):
        """CriterionWorkflow - a model defined in OpenAPI

        :param id: The id of this CriterionWorkflow.
        :param tools: The tools of this CriterionWorkflow.
        """
        self.openapi_types = {"id": str, "tools": List[Tool]}

        self.attribute_map = {"id": "id", "tools": "tools"}

        self._id = id
        self._tools = tools

    @classmethod
    def from_dict(cls, dikt: dict) -> "CriterionWorkflow":
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CriterionWorkflow of this CriterionWorkflow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CriterionWorkflow.

        ID of the criterion

        :return: The id of this CriterionWorkflow.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CriterionWorkflow.

        ID of the criterion

        :param id: The id of this CriterionWorkflow.
        :type id: str
        """

        self._id = id

    @property
    def tools(self):
        """Gets the tools of this CriterionWorkflow.

        tools to run as workflow steps for the given criterion

        :return: The tools of this CriterionWorkflow.
        :rtype: List[Tool]
        """
        return self._tools

    @tools.setter
    def tools(self, tools):
        """Sets the tools of this CriterionWorkflow.

        tools to run as workflow steps for the given criterion

        :param tools: The tools of this CriterionWorkflow.
        :type tools: List[Tool]
        """

        self._tools = tools
